---
- hosts: web
  sudo: yes
  tasks:
    - name: add node.js repository
      apt_repository: repo='ppa:chris-lea/node.js'

    - name: update software
      apt: update_cache=yes upgrade=dist

    - name: install apt packages
      apt: state=present pkg={{ item }}
      with_items:
        - nginx
        - nodejs
        - git-core
        - g++

    - name: install npm globals
      npm: state=present global=yes name={{ item }}
      sudo: yes
      with_items:
        - aperture
        - forever

    - name: copy files to app dir
      shell: rsync -av --exclude='.git' --exclude='provisioning' /vagrant/ {{ app_dir }}
      sudo_user: "{{ app_user }}"
      tags:
        - update

    - name: install dependencies
      shell: npm install --production chdir="{{ app_dir }}"
      sudo_user: "{{ app_user }}"
      tags:
      - update

    - name: build
      # shell: npm run build chdir="{{ app_dir }}"
      shell: aperture link && nodejs build.js build chdir="{{ app_dir }}"
      sudo_user: "{{ app_user }}"
      environment:
        NODE_ENV: "{{ NODE_ENV }}"
        PROXY_URL: "{{ PROXY_URL }}"
        DB_HOST: "{{ DB_HOST }}"
        DB_PASSWORD: "{{ DB_PASSWORD }}"
        DB_PORT: "{{ DB_PORT }}"
        DB_USER: "{{ DB_USER }}"
        COOKIE_SALT: "{{ COOKIE_SALT }}"
      tags:
      - update
      notify: reload nginx

    - name: copy system start script
      template: src=start.{{ app_name }}.sh dest="{{ base_dir }}/start.sh" mode=755
      sudo_user: "{{ app_user }}"
      tags:
      - update

    - name: copy app config
      template: src={{ app_name }}.config dest="{{ base_dir }}/{{ app_name }}.config" mode=755
      sudo_user: "{{ app_user }}"
      tags:
      - update

    - name: copy app start script
      template: src=start.{{ app_name }}.sh dest="{{ base_dir }}/start.{{ app_name }}.sh" mode=755
      sudo_user: "{{ app_user }}"
      tags:
      - update

    - name: set startup script
      lineinfile: dest="{{ base_dir }}/start.sh" state=present line="{{ base_dir }}/start.{{ app_name }}.sh"
      sudo_user: "{{ app_user }}"
      tags:
      - update

    - name: stop app
      command: forever stop server/server.js chdir="{{ app_dir }}"
      sudo_user: "{{ app_user }}"
      ignore_errors: yes
      tags:
      - update

    - name: start app
      shell: "{{ base_dir }}/start.{{ app_name }}.sh"
      sudo_user: "{{ app_user }}"
      tags:
      - update

    - name: remove default nginx site
      file: path=/etc/nginx/sites-enabled/default state=absent
      notify:
        - reload nginx

    - name: Copy nginx configuration for site
      template: src={{ nginx_template }} dest=/etc/nginx/sites-available/{{ app_name }}
      tags:
        - update
        - touch

    - name: link sites-availible to sites-enabled
      file: src=/etc/nginx/sites-available/{{ app_name }} dest=/etc/nginx/sites-enabled/{{ app_name }} state=link
      notify:
        - reload nginx
      tags:
        - update
        - touch

    - name: start nginx
      service: name=nginx state=started enabled=true

  handlers:
    - name: reload nginx
      service: name=nginx state=reloaded

  vars:
    app_user: vagrant
    app_name: coinspace
    app_dir: "{{ base_dir }}/{{ app_name }}"
    base_dir: /home/{{ app_user }}
    nginx_template: nginx-proxy.conf
    node_port: 9009
    NODE_ENV: production
    COOKIE_SALT: FILLMEIN
    DB_HOST: FILLMEIN
    DB_PASSWORD: FILLMEIN
    DB_PORT: FILLMEIN
    DB_USER: FILLMEIN
    PROXY_URL: FILLMEIN
